/*
 * Copyright 2012 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'java'
apply from: 'gradle/maven.gradle'
apply from: 'gradle/setup.gradle'

defaultTasks = ['assemble']

sourceCompatibility = '1.7'
targetCompatibility = '1.7'

repositories {
  mavenLocal()
  maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
  maven { url 'http://repo.springsource.org/release' }
  mavenCentral()
}

configurations {
  provided
  compile.extendsFrom provided
}

sourceSets {
  main {
    compileClasspath = compileClasspath + configurations.provided
  }
}

dependencies {
  provided "io.vertx:vertx-core:$vertxVersion"
  provided "io.vertx:vertx-platform:$vertxVersion"

  compile("org.springframework:spring-beans:$springVersion") { transitive = false }
  compile("org.springframework:spring-core:$springVersion") { transitive = false }
  compile("org.springframework:spring-context:$springVersion") { transitive = false }

  // testCompile "cglib:cglib:3.0"
  testCompile "junit:junit:$junitVersion"
  testCompile "log4j:log4j:1.2.16"

  testCompile "org.springframework:spring-expression:$springVersion"
  testCompile "org.springframework:spring-test:$springVersion"
  testCompile("io.vertx:vertx-testframework:$vertxVersion") {
    transitive = false // don't need all of the other language deps
  }
}

javadoc.classpath += configurations.provided

test {
  // Some vert.x properties
  systemProperty 'vertx.test.timeout', 15
  systemProperty 'vertx.mods', "$projectDir/build/tmp/mod-test"
  systemProperty 'vertx.version', "$project.version"

  // manually set lang property
  systemProperty 'vertx.langs.spring', "org.vertx.java.deploy.impl.spring.SpringVerticleFactory"

  // Show output
  testLogging.showStandardStreams = true
}

task prepareDist(type:Sync, dependsOn: ['build']) {
  group = 'vert.x'
  description = 'Prepare distribution'
  destinationDir file("build/${project.name}-v${project.version}")
  from jar
  from configurations.compile
}

task dist(type:Zip, dependsOn: ['prepareDist']) {
  group = 'vert.x'
  description = 'Package distribution'
  destinationDir file("build/distributions")
  from "build/${project.name}-v${project.version}"
  into 'build/distributions'
}

